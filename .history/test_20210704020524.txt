int p = 998244353;
int n, k, ans;
int x[100], y[100];

int sub(int a, int b) 
{
    return ((a - b) % p + p) % p;
}

int fpow(int a, int b, int p)
{
    int ans = 1;
    while(b)
    {
        if(b & 1) ans = (ll) ans * a % p;
        a = (ll)a * a % p;
        b >>= 1;
    }
    return ans;
}

void Lagrange(int n, int *x, int *y, int k)
{
    for(int i = 1; i <= n; i ++)
    {
        int s1 = 1, s2 = 1;
        for(int j = 1; j <= n; j ++)
        {
            if(i == j) continue;
            s1 = (ll)s1 * sub(k, x[j]) % p;
            s2 = (ll)s2 * sub(x[i], x[j]) % p;
        }
        ans = (ans + (ll)y[i] * s1 % p * fpow(s2, p - 2, p) % p) % p;
    }
}

int main()
{
    scanf("%d%d", &n, &k);
    for(int i = 1; i <= n; i ++) scanf("%d%d", &x[i], &y[i]);
    Lagrange(n, x, y, k);
    printf("%d", ans);
    return 0;
}
/*
5 20
1 1
2 5
3 15
4 35
5 70
*/
#include<bits/stdc++.h>
#define N 150010
#define ll long long
using namespace std;

const ll inf = 1e15;
int n, m, s, t, u, v, w, k = -1;
int qhead, qtail;
int head[N], dis[N], que[N], cur[N];
struct node{int to, next; ll w;} e[N * 20];

void add(int u, int v, ll w)
{
    e[++ k].next = head[u]; e[k].to = v;
    e[k].w = w; head[u] = k;
}

int bfs(int x)
{
    memset(dis, -1, sizeof(dis));
    qhead = qtail = dis[x] = 0;
    que[++ qtail] = x;
    while(qhead < qtail)
    {
        int p = que[++ qhead];
        for(int i = head[p]; i != -1; i = e[i].next)
            if(dis[e[i].to] == -1 && e[i].w)
            {
                dis[e[i].to] = dis[p] + 1;
                que[++ qtail] = e[i].to;
            }
    }
    return dis[t];
}

ll find(int x, ll cap)
{
    ll inc = 0;
    if(x == t || !cap) return cap;
    for(int i = cur[x]; i != -1; i = e[i].next)
    {
        cur[x] = i;
        if(dis[e[i].to] == dis[x] + 1 && e[i].w)
        {
            ll c = find(e[i].to, min(cap - inc, e[i].w));
            e[i].w -= c; e[i ^ 1].w += c; inc += c;
            if(inc >= cap) break;
        }
    }
    if(!inc) dis[x] = -1;
    return inc;
}

int main()
{
    memset(head, -1, sizeof(head));
    scanf("%d%d%d%d", &n, &m, &s, &t);
    for(int i = 1; i <= m; i ++)
    {
        scanf("%d%d
		%d", &u, &v, &w);
        add(u, v, w); add(v, u, 0)
    }
    ll ans = 0;
    while(bfs(s) != -1)
    {
        for(int i = 1; i <= n; i ++) cur[i] = head[i];
        ans += find(s, inf);
    }
    printf("%lld\n", ans);
    return 0;
}
/* 5556
1233123*/
"\namespace
"